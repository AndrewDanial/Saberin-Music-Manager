@page "/Playlists"
@using music_manager_starter.Shared

@inject HttpClient Http

@code {
    private List<Song> songs;
    private bool deleting = false;
    protected override async Task OnInitializedAsync()
    {
        songs = await Http.GetFromJsonAsync<List<Song>>("api/songs");
    }

    // If deleting, make the playlists shake, otherwise turn it off.
    public void SetDeleting() {
        deleting = !deleting;
        Console.WriteLine(deleting);
    }
}

<div class="p-0 min-h-screen bg-pattern flex flex-col over">
    <div class="opposite-ends">
        <h2 class="text-3xl font-bold text-white add-margin">Playlists</h2>
        <div>
            <button class="text-3xl text-white add-margin glass create-button">Create</button>
            <button @onclick="SetDeleting" class="text-3xl text-white add-margin glass delete-button">Delete</button>
        </div>
        
    </div>
  
    <div class="grid grid-cols-1 sm:grid-cols-1 md:grid-cols-1 lg:grid-cols-1 gap-2">
        @if (songs != null && songs.Count > 0)
        {
            @foreach (var song in songs)
            {
                <div class="glass add-margin p-6 border border-gray-300 rounded-lg text-white transition-transform transform hover:shadow-xl cursor-pointer @(deleting ? "play-shake" : "")">
                    <div class="opposite-ends">
                        <span class="text-xl font-semibold mb-2">@song.Title</span>
                        <span>❌</span>
                    </div>

                    <p class="text-md">Artist: <span class="font-light">@song.Artist</span></p>

                </div>
            }
        }
        else
        {
            <div class="col-span-1 text-center text-gray-400">No songs found.</div>
        }
    </div>
</div>

<style>
    .bg-pattern {
        background: linear-gradient( rgba(31, 41, 55, 0.7), rgba(31, 41, 55, 0.7) ), url('dalle.webp');
        background-size: cover;
        background-position: center;
        font-family: 'Rajdhani', sans-serif;
    }


    .glass {
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(10px);
        border-radius: 10px;
        position: relative;
        overflow: hidden;
    }

    .glass:before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        border: 2px solid rgba(255, 255, 255, 0.2);
        border-radius: 10px;
        pointer-events: none;
    }

    .opposite-ends {
        display: flex;
        justify-content: space-between;
    }

    .add-margin {
        margin-top: 12px;
        margin-left: 12px;
        margin-right: 24px;
        margin-bottom: 2px;
    }

    .create-button {
        background: rgba(0, 255, 0, 0.3);
        padding: 10px;
    }

    .delete-button {
        background: rgba(255, 0, 0, 0.3);
        padding: 10px;
    }

    .play-shake {
        animation: shake 0.5s;
        animation-iteration-count: infinite;
    }


    @@keyframes shake {
        0% {
            transform: translate(0.5px, 0.5px) rotate(0deg);
        }

        10% {
            transform: translate(-0.5px, -1.5px) rotate(-0.5deg);
        }

        20% {
            transform: translate(-2.5px, 0px) rotate(0.5deg);
        }

        30% {
            transform: translate(3px, 2px) rotate(0deg);
        }

        40% {
            transform: translate(0.5px, -0.5px) rotate(0.5deg);
        }

        50% {
            transform: translate(-0.5px, 0.5px) rotate(-0.5deg);
        }

        60% {
            transform: translate(-1.5px, 0.5px) rotate(0deg);
        }

        70% {
            transform: translate(1.5px, 0.5px) rotate(-0.5deg);
        }

        80% {
            transform: translate(-0.5px, -0.5px) rotate(0.5deg);
        }

        90% {
            transform: translate(0.5px, 1.5px) rotate(0deg);
        }

        100% {
            transform: translate(0.5px, -1.5px) rotate(-0.5deg);
        }

    }

</style>