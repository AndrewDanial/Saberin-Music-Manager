@page "/Playlists"
@using music_manager_starter.Shared

@inject HttpClient Http

@code {
    private List<Playlist> playlists = [];
    private bool deleting = false;
    private bool createModalOpen = false;
    private bool editModalOpen = false;
    private Playlist currentPlaylist = new Playlist();
    int counter = 0;
    protected override async Task OnInitializedAsync()
    {
        playlists = await Http.GetFromJsonAsync<List<Playlist>>("api/playlists");
    }

    // If deleting, make the playlists shake, otherwise turn it off.
    public void SetDeleting() {
        deleting = !deleting;
    }

    public void ShowCreatePlaylist() {
        createModalOpen = true;
    }

    public void ShowEditPlaylist(Playlist playlist) {
        editModalOpen = true;
        currentPlaylist = playlist;
    }

    public async void AddPlaylist(Playlist newPlaylist) {
        var response = await Http.PostAsJsonAsync("api/playlists", newPlaylist);
        playlists = await Http.GetFromJsonAsync<List<Playlist>>("api/playlists");

        await InvokeAsync(StateHasChanged);
    }

    public async void EditPlaylist(Playlist newPlaylist) {
        var response = await Http.PutAsJsonAsync<Playlist>($"api/playlists/{newPlaylist.Id}", newPlaylist);
        playlists = await Http.GetFromJsonAsync<List<Playlist>>("api/playlists");
        await InvokeAsync(StateHasChanged);
    }


    public async void DeletePlaylist(Guid playlistId) {
        if (!deleting) {
            return;
        }
        var response = await Http.DeleteAsync($"api/playlists/{playlistId}");
        playlists = await Http.GetFromJsonAsync<List<Playlist>>("api/playlists");
        await InvokeAsync(StateHasChanged);
    }

    public void UpdateAddModalVisibility(bool visiblity) {
        createModalOpen = visiblity;
    }

    public void UpdateEditModalVisiblity(bool visibility) {
        editModalOpen = visibility;
    }

}

<div class="p-0 min-h-screen bg-pattern flex flex-col over position-relative">
    <div class="opposite-ends">
        <h2 class="text-3xl font-bold text-white add-margin">Playlists</h2>
        <div>
            <button @onclick="ShowCreatePlaylist" class="text-3xl text-white add-margin glass create-button">Create</button>
            <button @onclick="SetDeleting" class="text-3xl text-white add-margin glass delete-button">Delete</button>
            
        </div>

    </div>

    @*Container to render all Playlists*@
    <div class="grid grid-cols-1 sm:grid-cols-1 md:grid-cols-1 lg:grid-cols-1 gap-2">
       
        @if (playlists != null && playlists.Count > 0)
        {
            @foreach (var playlist in playlists)
            {
                
                <div @onclick="() => DeletePlaylist(playlist.Id)" class="glass add-margin p-6 border border-gray-300 rounded-lg text-white transition-transform transform hover:shadow-xl cursor-pointer @(deleting ? "play-shake" : "")">
                    <div class="opposite-ends">
                        @*Playlist Title*@
                        <h3 class="text-xl font-semibold mb-2">@playlist.Title</h3>
                        @*Edit Button*@
                        <button @onclick="() => ShowEditPlaylist(playlist)" class="border-gray-300 border border-solid rounded-lg p-1 hover:bg-purple-900">
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" wdith="48px" height="48px" >
                                <path d="M410.3 231l11.3-11.3-33.9-33.9-62.1-62.1L291.7 89.8l-11.3 11.3-22.6 22.6L58.6 322.9c-10.4 10.4-18 23.3-22.2 37.4L1 480.7c-2.5 8.4-.2 17.5 6.1 23.7s15.3 8.5 23.7 6.1l120.3-35.4c14.1-4.2 27-11.8 37.4-22.2L387.7 253.7 410.3 231zM160 399.4l-9.1 22.7c-4 3.1-8.5 5.4-13.3 6.9L59.4 452l23-78.1c1.4-4.9 3.8-9.4 6.9-13.3l22.7-9.1 0 32c0 8.8 7.2 16 16 16l32 0zM362.7 18.7L348.3 33.2 325.7 55.8 314.3 67.1l33.9 33.9 62.1 62.1 33.9 33.9 11.3-11.3 22.6-22.6 14.5-14.5c25-25 25-65.5 0-90.5L453.3 18.7c-25-25-65.5-25-90.5 0zm-47.4 168l-144 144c-6.2 6.2-16.4 6.2-22.6 0s-6.2-16.4 0-22.6l144-144c6.2-6.2 16.4-6.2 22.6 0s6.2 16.4 0 22.6z" />
                            </svg>
                        </button>
                    </div>
                  
                </div>
            }
        }
        else
        {
            deleting = false;
            <div class="col-span-1 text-center text-gray-400">No playlists found.</div>
        }
    </div>
    <AddPlaylistModal IsVisible="createModalOpen" OnModalChanged="UpdateAddModalVisibility" OnAddPlaylist="AddPlaylist" />
    <EditPlaylistModal IsVisible="editModalOpen" OnModalChanged="UpdateEditModalVisiblity" CurrentPlaylist="currentPlaylist" OnEditPlaylist="EditPlaylist"></EditPlaylistModal>
</div>


<style>
    .bg-pattern {
        background: linear-gradient( rgba(31, 41, 55, 0.7), rgba(31, 41, 55, 0.7) ), url('dalle.webp');
        background-size: cover;
        background-position: center;
        font-family: 'Rajdhani', sans-serif;
    }


    .glass {
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(10px);
        border-radius: 10px;
        position: relative;
        overflow: hidden;
    }

    .glass:before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        border: 2px solid rgba(255, 255, 255, 0.2);
        border-radius: 10px;
        pointer-events: none;
    }

    .opposite-ends {
        display: flex;
        justify-content: space-between;
    }

    .add-margin {
        margin-top: 12px;
        margin-left: 12px;
        margin-right: 24px;
        margin-bottom: 2px;
    }

    .create-button {
        background: rgba(0, 255, 0, 0.3);
        padding: 10px;
    }

    .delete-button {
        background: rgba(255, 0, 0, 0.3);
        padding: 10px;
    }

    .play-shake {
        animation: shake 0.5s;
        animation-iteration-count: infinite;
    }


    @@keyframes shake {
        0% {
            transform: translate(0.5px, 0.5px) rotate(0deg);
        }

        10% {
            transform: translate(-0.5px, -1.5px) rotate(-0.5deg);
        }

        20% {
            transform: translate(-2.5px, 0px) rotate(0.5deg);
        }

        30% {
            transform: translate(3px, 2px) rotate(0deg);
        }

        40% {
            transform: translate(0.5px, -0.5px) rotate(0.5deg);
        }

        50% {
            transform: translate(-0.5px, 0.5px) rotate(-0.5deg);
        }

        60% {
            transform: translate(-1.5px, 0.5px) rotate(0deg);
        }

        70% {
            transform: translate(1.5px, 0.5px) rotate(-0.5deg);
        }

        80% {
            transform: translate(-0.5px, -0.5px) rotate(0.5deg);
        }

        90% {
            transform: translate(0.5px, 1.5px) rotate(0deg);
        }

        100% {
            transform: translate(0.5px, -1.5px) rotate(-0.5deg);
        }

    }

</style>