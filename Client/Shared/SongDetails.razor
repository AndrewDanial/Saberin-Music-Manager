@using music_manager_starter.Shared
@inject HttpClient Http
<div class="playlist-modal @(IsVisible ? "visible" : "invisible")">
    <div class="modal-background bg-gray-800 rounded-lg border border-solid border-gray-300 relative">
        <p class="text-xl modal-title underline">@Song.Title's Details</p>
        <div class="playlist-modal-content">
            <img src="https://placehold.co/100x100" />
            <div class="detail-text">
                <h3 class="detail"><span class="underline">Artist: </span> @Song.Artist</h3>
                <h3 class="detail"><span class="underline">Album:</span> @Song.Album</h3>
                <h3 class="detail"><span class="underline">Genre:</span> @Song.Genre</h3>
                <h3 class="detail"><span class="underline">Release Date:</span> @RandomDay()</h3>
            </div>
            
        </div>

            <button @onclick="CloseModal" class="bg-purple-600 text-white px-4 py-2 rounded close-button">Close</button>

    </div>

</div>

@code {

    [Parameter]
    public Song? Song { get; set; }
    [Parameter]
    public bool IsVisible { get; set; } = false;
    [Parameter]
    public EventCallback<bool> OnModalClosed { get; set; }

    private async void CloseModal() {
        IsVisible = false;
        if (OnModalClosed.HasDelegate) {
            await OnModalClosed.InvokeAsync(IsVisible);
        }
    }

    private Random gen = new Random();

    // Generate a random release date for now
    // TODO: Store release date in song model
    private DateOnly RandomDay()
    {
        DateTime start = new DateTime(1995, 1, 1);
        int range = (DateTime.Today - start).Days;
        DateTime currentDate = start.AddDays(gen.Next(range));
        return DateOnly.FromDateTime(currentDate);
    }
}

<style>
    .playlist-modal {
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        background: rgba(0, 0, 0, 0.5);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 1000; /* Ensure it's above other content */
    }

    .modal-title {
        font-size: 32px;
        color: white;
        margin: 12px;
    }

    .modal-background {
        width: 25%;
        height: 50%;
    }

    .playlist-modal-content {
        display: flex;
        flex-direction: row;
        align-items: center;
        margin: 12px;
        color: white;
    }
    
    .detail {
        margin-top: 6px;
        margin-left: 12px;
    }

    .underline {
        font-weight: bold;
    }
    
    .close-button {
        position: absolute;
        left: 0;
        right: 0;
        bottom: 0;
    }
</style>
